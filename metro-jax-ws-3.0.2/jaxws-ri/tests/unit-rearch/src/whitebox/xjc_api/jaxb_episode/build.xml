<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<!DOCTYPE project [
<!ENTITY commonTargets SYSTEM "../../../../common-targets.xml">
]>

<!--
  This is the build.xml file for the simple hello tests. These
  tests deploy a "hello world" type of service endpoint and
  have a client that calls into the service to send and receive
  a String.
  -->
<project basedir="." default="build" name="whitebox">

  &commonTargets;

  <target name="build" depends="setup">
  </target>

  <target name="deploy">
  </target>
  <target name="generate-episode" depends="setup">
        <mkdir dir="${build.temp.classes}/jaxb"/>
        <mkdir dir="${build.temp.classes}/jaxb/META-INF"/>
        <xjc schema="${basedir}/config/hello.xsd"
             binding="${basedir}/config/custom-jaxb.xjb"
             destdir="${build.temp.classes}/jaxb">
            <arg value="-episode"/>
            <arg file="${build.temp.classes}/jaxb/META-INF/sun-jaxb.episode"/>
        </xjc>

        <javac srcdir="${build.temp.classes}/jaxb"
               debug="${compile.debug}"
               destdir="${build.temp.classes}/jaxb">
            <classpath refid="compile.classpath"/>
        </javac>

        <jar destfile="${build.temp.classes}/episode.jar"
             basedir="${build.temp.classes}/jaxb"
             excludes="**/*.java"/>
        <copy todir="${build.temp.classes}">
            <fileset dir="${basedir}/config" includes="*.xsd"/>
            </copy>
        <delete dir="${build.temp.classes}/jaxb"/>
 </target>


  <target name="runclient" depends="setup,generate-episode">
	<javac srcdir="${basedir}"
             fork="true"
             destdir="${build.temp.classes}"
             debug="${compile.debug}"
             optimize="${compile.optimize}"
             includes="**">
		<classpath>
			<path refid="compile.classpath"/>
		</classpath>
	</javac>
    <antcall target="rerun-client"/>
  </target>
  
</project>
