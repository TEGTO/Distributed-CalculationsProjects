<!--

    Copyright (c) 2013, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Distribution License v. 1.0, which is available at
    http://www.eclipse.org/org/documents/edl-v10.php.

    SPDX-License-Identifier: BSD-3-Clause

-->

<xsd:schema
        targetNamespace="urn:test:types"
        attributeFormDefault="qualified"
        elementFormDefault="qualified"
        xmlns:types="urn:test:types"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema">

    <xsd:element name="Hello">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="argument" type="xsd:string"/>
                <xsd:element name="extra" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="Abstract" type="types:AbstractType"/>

    <xsd:complexType name="AbstractType">
        <xsd:sequence>
            <xsd:element name="abstract" type="xsd:string"/>
            <xsd:element name="static" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="AbstractResponse" type="types:AbstractType"/>

    <xsd:complexType name="HelloType">
        <xsd:sequence>
            <xsd:element name="argument" type="xsd:string"/>
            <xsd:element name="extra" type="xsd:string"/>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:element name="HelloOutput">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="argument" type="xsd:string"/>
                <xsd:element name="extra" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="Foo">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="fooChild1" type="xsd:string"/>
                <xsd:element name="fooChild2" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="FooResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="fooResponse1" type="xsd:string"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    <xsd:element name="info" type="xsd:string"/>
    <xsd:element name="infoFaultDetail" type="xsd:string"/>
</xsd:schema>
